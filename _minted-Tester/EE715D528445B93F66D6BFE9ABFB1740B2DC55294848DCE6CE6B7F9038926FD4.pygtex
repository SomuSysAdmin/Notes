\begin{Verbatim}[commandchars=\\\{\}]
	\PYG{c+c1}{\PYGZsh{} Allow anonymous FTP? (Beware \PYGZhy{} allowed by default if you comment this out).}
	\PYG{n+nv}{anonymous\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Uncomment this to allow local users to log in.}
	\PYG{c+c1}{\PYGZsh{} When SELinux is enforcing check for SE bool ftp\PYGZus{}home\PYGZus{}dir}
	\PYG{n+nv}{local\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Uncomment this to enable any form of FTP write command.}
	\PYG{n+nv}{write\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Default umask for local users is 077. You may wish to change this to 022,}
	\PYG{c+c1}{\PYGZsh{} if your users expect that (022 is used by most other ftpd\PYGZsq{}s)}
	\PYG{n+nv}{local\PYGZus{}umask}\PYG{o}{=}\PYG{l+m}{022}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Uncomment this to allow the anonymous FTP user to upload files. This only}
	\PYG{c+c1}{\PYGZsh{} has an effect if the above global write enable is activated. Also, you will}
	\PYG{c+c1}{\PYGZsh{} obviously need to create a directory writable by the FTP user.}
	\PYG{c+c1}{\PYGZsh{} When SELinux is enforcing check for SE bool allow\PYGZus{}ftpd\PYGZus{}anon\PYGZus{}write, allow\PYGZus{}ftpd\PYGZus{}full\PYGZus{}access}
	\PYG{c+c1}{\PYGZsh{}anon\PYGZus{}upload\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Uncomment this if you want the anonymous FTP user to be able to create}
	\PYG{c+c1}{\PYGZsh{} new directories.}
	\PYG{c+c1}{\PYGZsh{}anon\PYGZus{}mkdir\PYGZus{}write\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Activate directory messages \PYGZhy{} messages given to remote users when they}
	\PYG{c+c1}{\PYGZsh{} go into a certain directory.}
	\PYG{n+nv}{dirmessage\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Activate logging of uploads/downloads.}
	\PYG{n+nv}{xferlog\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Make sure PORT transfer connections originate from port 20 (ftp\PYGZhy{}data).}
	\PYG{n+nv}{connect\PYGZus{}from\PYGZus{}port\PYGZus{}20}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} If you want, you can arrange for uploaded anonymous files to be owned by}
	\PYG{c+c1}{\PYGZsh{} a different user. Note! Using \PYGZdq{}root\PYGZdq{} for uploaded files is not}
	\PYG{c+c1}{\PYGZsh{} recommended!}
	\PYG{c+c1}{\PYGZsh{}chown\PYGZus{}uploads=YES}
	\PYG{c+c1}{\PYGZsh{}chown\PYGZus{}username=whoever}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may override where the log file goes if you like. The default is shown}
	\PYG{c+c1}{\PYGZsh{} below.}
	\PYG{c+c1}{\PYGZsh{}xferlog\PYGZus{}file=/var/log/xferlog}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} If you want, you can have your log file in standard ftpd xferlog format.}
	\PYG{c+c1}{\PYGZsh{} Note that the default log file location is /var/log/xferlog in this case.}
	\PYG{n+nv}{xferlog\PYGZus{}std\PYGZus{}format}\PYG{o}{=}YES
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may change the default value for timing out an idle session.}
	\PYG{c+c1}{\PYGZsh{}idle\PYGZus{}session\PYGZus{}timeout=600}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may change the default value for timing out a data connection.}
	\PYG{c+c1}{\PYGZsh{}data\PYGZus{}connection\PYGZus{}timeout=120}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} It is recommended that you define on your system a unique user which the}
	\PYG{c+c1}{\PYGZsh{} ftp server can use as a totally isolated and unprivileged user.}
	\PYG{c+c1}{\PYGZsh{}nopriv\PYGZus{}user=ftpsecure}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} Enable this and the server will recognise asynchronous ABOR requests. Not}
	\PYG{c+c1}{\PYGZsh{} recommended for security (the code is non\PYGZhy{}trivial). Not enabling it,}
	\PYG{c+c1}{\PYGZsh{} however, may confuse older FTP clients.}
	\PYG{c+c1}{\PYGZsh{}async\PYGZus{}abor\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} By default the server will pretend to allow ASCII mode but in fact ignore}
	\PYG{c+c1}{\PYGZsh{} the request. Turn on the below options to have the server actually do ASCII}
	\PYG{c+c1}{\PYGZsh{} mangling on files when in ASCII mode.}
	\PYG{c+c1}{\PYGZsh{} Beware that on some FTP servers, ASCII support allows a denial of service}
	\PYG{c+c1}{\PYGZsh{} attack (DoS) via the command \PYGZdq{}SIZE /big/file\PYGZdq{} in ASCII mode. vsftpd}
	\PYG{c+c1}{\PYGZsh{} predicted this attack and has always been safe, reporting the size of the}
	\PYG{c+c1}{\PYGZsh{} raw file.}
	\PYG{c+c1}{\PYGZsh{} ASCII mangling is a horrible feature of the protocol.}
	\PYG{c+c1}{\PYGZsh{}ascii\PYGZus{}upload\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}ascii\PYGZus{}download\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may fully customise the login banner string:}
	\PYG{c+c1}{\PYGZsh{}ftpd\PYGZus{}banner=Welcome to blah FTP service.}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may specify a file of disallowed anonymous e\PYGZhy{}mail addresses. Apparently}
	\PYG{c+c1}{\PYGZsh{} useful for combatting certain DoS attacks.}
	\PYG{c+c1}{\PYGZsh{}deny\PYGZus{}email\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{} (default follows)}
	\PYG{c+c1}{\PYGZsh{}banned\PYGZus{}email\PYGZus{}file=/etc/vsftpd/banned\PYGZus{}emails}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may specify an explicit list of local users to chroot() to their home}
	\PYG{c+c1}{\PYGZsh{} directory. If chroot\PYGZus{}local\PYGZus{}user is YES, then this list becomes a list of}
	\PYG{c+c1}{\PYGZsh{} users to NOT chroot().}
	\PYG{c+c1}{\PYGZsh{} (Warning! chroot\PYGZsq{}ing can be very dangerous. If using chroot, make sure that}
	\PYG{c+c1}{\PYGZsh{} the user does not have write access to the top level directory within the}
	\PYG{c+c1}{\PYGZsh{} chroot)}
	\PYG{c+c1}{\PYGZsh{}chroot\PYGZus{}local\PYGZus{}user=YES}
	\PYG{c+c1}{\PYGZsh{}chroot\PYGZus{}list\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{} (default follows)}
	\PYG{c+c1}{\PYGZsh{}chroot\PYGZus{}list\PYGZus{}file=/etc/vsftpd/chroot\PYGZus{}list}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} You may activate the \PYGZdq{}\PYGZhy{}R\PYGZdq{} option to the builtin ls. This is disabled by}
	\PYG{c+c1}{\PYGZsh{} default to avoid remote users being able to cause excessive I/O on large}
	\PYG{c+c1}{\PYGZsh{} sites. However, some broken FTP clients such as \PYGZdq{}ncftp\PYGZdq{} and \PYGZdq{}mirror\PYGZdq{} assume}
	\PYG{c+c1}{\PYGZsh{} the presence of the \PYGZdq{}\PYGZhy{}R\PYGZdq{} option, so there is a strong case for enabling it.}
	\PYG{c+c1}{\PYGZsh{}ls\PYGZus{}recurse\PYGZus{}enable=YES}
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} When \PYGZdq{}listen\PYGZdq{} directive is enabled, vsftpd runs in standalone mode and}
	\PYG{c+c1}{\PYGZsh{} listens on IPv4 sockets. This directive cannot be used in conjunction}
	\PYG{c+c1}{\PYGZsh{} with the listen\PYGZus{}ipv6 directive.}
	\PYG{n+nv}{listen}\PYG{o}{=}NO
	\PYG{c+c1}{\PYGZsh{}}
	\PYG{c+c1}{\PYGZsh{} This directive enables listening on IPv6 sockets. By default, listening}
	\PYG{c+c1}{\PYGZsh{} on the IPv6 \PYGZdq{}any\PYGZdq{} address (::) will accept connections from both IPv6}
	\PYG{c+c1}{\PYGZsh{} and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6}
	\PYG{c+c1}{\PYGZsh{} sockets. If you want that (perhaps because you want to listen on specific}
	\PYG{c+c1}{\PYGZsh{} addresses) then you must run two copies of vsftpd with two configuration}
	\PYG{c+c1}{\PYGZsh{} files.}
	\PYG{c+c1}{\PYGZsh{} Make sure, that one of the listen options is commented !!}
	\PYG{n+nv}{listen\PYGZus{}ipv6}\PYG{o}{=}YES

	\PYG{n+nv}{pam\PYGZus{}service\PYGZus{}name}\PYG{o}{=}vsftpd
	\PYG{n+nv}{userlist\PYGZus{}enable}\PYG{o}{=}YES
	\PYG{n+nv}{tcp\PYGZus{}wrappers}\PYG{o}{=}YES
\end{Verbatim}
